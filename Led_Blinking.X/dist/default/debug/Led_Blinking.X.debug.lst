

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Aug 11 18:47:02 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F46K20 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
    57   000000                     
    58 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
    59   000000                     
    60 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
    61   000000                     
    62                           	psect	nvCOMRAM
    63   000001                     __pnvCOMRAM:
    64                           	callstack 0
    65   000001                     _INT2_InterruptHandler:
    66                           	callstack 0
    67   000001                     	ds	2
    68   000003                     _INT1_InterruptHandler:
    69                           	callstack 0
    70   000003                     	ds	2
    71   000005                     _INT0_InterruptHandler:
    72                           	callstack 0
    73   000005                     	ds	2
    74   000000                     _LATCbits	set	3979
    75   000000                     _WPUB	set	3964
    76   000000                     _ANSELH	set	3967
    77   000000                     _LATA	set	3977
    78   000000                     _TRISA	set	3986
    79   000000                     _LATE	set	3981
    80   000000                     _LATD	set	3980
    81   000000                     _LATC	set	3979
    82   000000                     _LATB	set	3978
    83   000000                     _OSCTUNE	set	3995
    84   000000                     _RCONbits	set	4048
    85   000000                     _INTCONbits	set	4082
    86   000000                     _TRISE	set	3990
    87   000000                     _TRISD	set	3989
    88   000000                     _TRISC	set	3988
    89   000000                     _TRISB	set	3987
    90   000000                     _IOCB	set	3965
    91   000000                     _OSCCON	set	4051
    92   000000                     _INTCON3bits	set	4080
    93   000000                     _INTCON2bits	set	4081
    94                           
    95                           ; #config settings
    96                           
    97                           	psect	cinit
    98   0010B6                     __pcinit:
    99                           	callstack 0
   100   0010B6                     start_initialization:
   101                           	callstack 0
   102   0010B6                     __initialization:
   103                           	callstack 0
   104   0010B6                     end_of_initialization:
   105                           	callstack 0
   106   0010B6                     __end_of__initialization:
   107                           	callstack 0
   108   0010B6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   109   0010B8  6EF8               	movwf	tblptru,c
   110   0010BA  0100               	movlb	0
   111   0010BC  EF01  F008         	goto	_main	;jump to C main() function
   112                           
   113                           	psect	cstackCOMRAM
   114   000007                     __pcstackCOMRAM:
   115                           	callstack 0
   116   000007                     INT0_SetInterruptHandler@InterruptHandler:
   117                           	callstack 0
   118   000007                     INT1_SetInterruptHandler@InterruptHandler:
   119                           	callstack 0
   120   000007                     INT2_SetInterruptHandler@InterruptHandler:
   121                           	callstack 0
   122                           
   123                           ; 2 bytes @ 0x0
   124   000007                     	ds	2
   125   000009                     ??_main:
   126                           
   127                           ; 1 bytes @ 0x2
   128   000009                     	ds	2
   129                           
   130 ;;
   131 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   132 ;;
   133 ;; *************** function _main *****************
   134 ;; Defined at:
   135 ;;		line 39 in file "main.c"
   136 ;; Parameters:    Size  Location     Type
   137 ;;		None
   138 ;; Auto vars:     Size  Location     Type
   139 ;;		None
   140 ;; Return value:  Size  Location     Type
   141 ;;                  2  118[None  ] int 
   142 ;; Registers used:
   143 ;;		wreg, status,2, status,0, cstack
   144 ;; Tracked objects:
   145 ;;		On entry : 0/0
   146 ;;		On exit  : 0/0
   147 ;;		Unchanged: 0/0
   148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   153 ;;Total ram usage:        2 bytes
   154 ;; Hardware stack levels required when called: 3
   155 ;; This function calls:
   156 ;;		_SYSTEM_Initialize
   157 ;; This function is called by:
   158 ;;		Startup code after reset
   159 ;; This function uses a non-reentrant model
   160 ;;
   161                           
   162                           	psect	text0
   163   001002                     __ptext0:
   164                           	callstack 0
   165   001002                     _main:
   166                           	callstack 28
   167   001002                     
   168                           ;main.c: 41:     SYSTEM_Initialize();
   169   001002  EC54  F008         	call	_SYSTEM_Initialize	;wreg free
   170   001006                     l906:
   171   001006  B08B               	btfsc	139,0,c	;volatile
   172   001008  EF08  F008         	goto	u81
   173   00100C  EF0B  F008         	goto	u80
   174   001010                     u81:
   175   001010  0E01               	movlw	1
   176   001012  EF0C  F008         	goto	u86
   177   001016                     u80:
   178   001016  0E00               	movlw	0
   179   001018                     u86:
   180   001018  0AFF               	xorlw	255
   181   00101A  6E09               	movwf	??_main^0,c
   182   00101C  508B               	movf	139,w,c	;volatile
   183   00101E  1809               	xorwf	??_main^0,w,c
   184   001020  0BFE               	andlw	-2
   185   001022  1809               	xorwf	??_main^0,w,c
   186   001024  6E8B               	movwf	139,c	;volatile
   187   001026                     
   188                           ;main.c: 60:         _delay((unsigned long)((250)*(8000000/4000.0)));
   189   001026  0E03               	movlw	3
   190   001028  6E0A               	movwf	(??_main+1)^0,c
   191   00102A  0E8A               	movlw	138
   192   00102C  6E09               	movwf	??_main^0,c
   193   00102E  0E56               	movlw	86
   194   001030                     u97:
   195   001030  2EE8               	decfsz	wreg,f,c
   196   001032  D7FE               	bra	u97
   197   001034  2E09               	decfsz	??_main^0,f,c
   198   001036  D7FC               	bra	u97
   199   001038  2E0A               	decfsz	(??_main+1)^0,f,c
   200   00103A  D7FA               	bra	u97
   201   00103C  EF03  F008         	goto	l906
   202   001040  EF00  F000         	goto	start
   203   001044                     __end_of_main:
   204                           	callstack 0
   205                           
   206 ;; *************** function _SYSTEM_Initialize *****************
   207 ;; Defined at:
   208 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;		None
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, status,2, status,0, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   226 ;;Total ram usage:        0 bytes
   227 ;; Hardware stack levels used: 1
   228 ;; Hardware stack levels required when called: 2
   229 ;; This function calls:
   230 ;;		_CLOCK_Initialize
   231 ;;		_INTERRUPT_Initialize
   232 ;;		_PIN_MANAGER_Initialize
   233 ;; This function is called by:
   234 ;;		_main
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           	psect	text1
   239   0010A8                     __ptext1:
   240                           	callstack 0
   241   0010A8                     _SYSTEM_Initialize:
   242                           	callstack 28
   243   0010A8                     
   244                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
   245   0010A8  EC6F  F008         	call	_CLOCK_Initialize	;wreg free
   246                           
   247                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
   248   0010AC  EC3C  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   249   0010B0                     
   250                           ;mcc_generated_files/system/src/system.c: 43:     INTERRUPT_Initialize();
   251   0010B0  EC22  F008         	call	_INTERRUPT_Initialize	;wreg free
   252   0010B4  0012               	return		;funcret
   253   0010B6                     __end_of_SYSTEM_Initialize:
   254                           	callstack 0
   255                           
   256 ;; *************** function _PIN_MANAGER_Initialize *****************
   257 ;; Defined at:
   258 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels used: 1
   278 ;; This function calls:
   279 ;;		Nothing
   280 ;; This function is called by:
   281 ;;		_SYSTEM_Initialize
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text2
   286   001078                     __ptext2:
   287                           	callstack 0
   288   001078                     _PIN_MANAGER_Initialize:
   289                           	callstack 29
   290   001078                     
   291                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
   292   001078  0E00               	movlw	0
   293   00107A  6E89               	movwf	137,c	;volatile
   294                           
   295                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
   296   00107C  0E00               	movlw	0
   297   00107E  6E8A               	movwf	138,c	;volatile
   298                           
   299                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
   300   001080  0E00               	movlw	0
   301   001082  6E8B               	movwf	139,c	;volatile
   302                           
   303                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
   304   001084  0E00               	movlw	0
   305   001086  6E8C               	movwf	140,c	;volatile
   306                           
   307                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
   308   001088  0E00               	movlw	0
   309   00108A  6E8D               	movwf	141,c	;volatile
   310   00108C                     
   311                           ;mcc_generated_files/system/src/pins.c: 55:     TRISA = 0xFF;
   312   00108C  6892               	setf	146,c	;volatile
   313   00108E                     
   314                           ;mcc_generated_files/system/src/pins.c: 56:     TRISB = 0xFF;
   315   00108E  6893               	setf	147,c	;volatile
   316                           
   317                           ;mcc_generated_files/system/src/pins.c: 57:     TRISC = 0xFE;
   318   001090  0EFE               	movlw	254
   319   001092  6E94               	movwf	148,c	;volatile
   320   001094                     
   321                           ;mcc_generated_files/system/src/pins.c: 58:     TRISD = 0xFF;
   322   001094  6895               	setf	149,c	;volatile
   323                           
   324                           ;mcc_generated_files/system/src/pins.c: 59:     TRISE = 0x7;
   325   001096  0E07               	movlw	7
   326   001098  6E96               	movwf	150,c	;volatile
   327                           
   328                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELH = 0x1F;
   329   00109A  0E1F               	movlw	31
   330   00109C  6E7F               	movwf	127,c	;volatile
   331   00109E                     
   332                           ;mcc_generated_files/system/src/pins.c: 69:     WPUB = 0xFF;
   333   00109E  687C               	setf	124,c	;volatile
   334                           
   335                           ;mcc_generated_files/system/src/pins.c: 90:     IOCB = 0x0;
   336   0010A0  0E00               	movlw	0
   337   0010A2  6E7D               	movwf	125,c	;volatile
   338   0010A4                     
   339                           ;mcc_generated_files/system/src/pins.c: 94:     INTCONbits.RBIE = 1;
   340   0010A4  86F2               	bsf	242,3,c	;volatile
   341   0010A6  0012               	return		;funcret
   342   0010A8                     __end_of_PIN_MANAGER_Initialize:
   343                           	callstack 0
   344                           
   345 ;; *************** function _INTERRUPT_Initialize *****************
   346 ;; Defined at:
   347 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;Total ram usage:        0 bytes
   366 ;; Hardware stack levels used: 1
   367 ;; Hardware stack levels required when called: 1
   368 ;; This function calls:
   369 ;;		_INT0_SetInterruptHandler
   370 ;;		_INT1_SetInterruptHandler
   371 ;;		_INT2_SetInterruptHandler
   372 ;; This function is called by:
   373 ;;		_SYSTEM_Initialize
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           	psect	text3
   378   001044                     __ptext3:
   379                           	callstack 0
   380   001044                     _INTERRUPT_Initialize:
   381                           	callstack 28
   382   001044                     
   383                           ;mcc_generated_files/system/src/interrupt.c: 45:     RCONbits.IPEN = 0;
   384   001044  9ED0               	bcf	208,7,c	;volatile
   385                           
   386                           ;mcc_generated_files/system/src/interrupt.c: 49:     (INTCONbits.INT0IF = 0);
   387   001046  92F2               	bcf	242,1,c	;volatile
   388                           
   389                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON2bits.INTEDG0 = 1);
   390   001048  8CF1               	bsf	241,6,c	;volatile
   391   00104A                     
   392                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
   393   00104A  0E00               	movlw	0
   394   00104C  6E07               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
   395   00104E  0E00               	movlw	0
   396   001050  6E08               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
   397   001052  EC6A  F008         	call	_INT0_SetInterruptHandler	;wreg free
   398   001056                     
   399                           ;mcc_generated_files/system/src/interrupt.c: 57:     (INTCON3bits.INT1IF = 0);
   400   001056  90F0               	bcf	240,0,c	;volatile
   401   001058                     
   402                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON2bits.INTEDG1 = 1);
   403   001058  8AF1               	bsf	241,5,c	;volatile
   404                           
   405                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
   406   00105A  0E00               	movlw	0
   407   00105C  6E07               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
   408   00105E  0E00               	movlw	0
   409   001060  6E08               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
   410   001062  EC65  F008         	call	_INT1_SetInterruptHandler	;wreg free
   411   001066                     
   412                           ;mcc_generated_files/system/src/interrupt.c: 65:     (INTCON3bits.INT2IF = 0);
   413   001066  92F0               	bcf	240,1,c	;volatile
   414   001068                     
   415                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON2bits.INTEDG2 = 1);
   416   001068  88F1               	bsf	241,4,c	;volatile
   417                           
   418                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
   419   00106A  0E00               	movlw	0
   420   00106C  6E07               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
   421   00106E  0E00               	movlw	0
   422   001070  6E08               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
   423   001072  EC60  F008         	call	_INT2_SetInterruptHandler	;wreg free
   424   001076  0012               	return		;funcret
   425   001078                     __end_of_INTERRUPT_Initialize:
   426                           	callstack 0
   427                           
   428 ;; *************** function _INT2_SetInterruptHandler *****************
   429 ;; Defined at:
   430 ;;		line 144 in file "mcc_generated_files/system/src/interrupt.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   433 ;;		 -> INT2_DefaultInterruptHandler(1), 
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;Total ram usage:        2 bytes
   450 ;; Hardware stack levels used: 1
   451 ;; This function calls:
   452 ;;		Nothing
   453 ;; This function is called by:
   454 ;;		_INTERRUPT_Initialize
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text4
   459   0010C0                     __ptext4:
   460                           	callstack 0
   461   0010C0                     _INT2_SetInterruptHandler:
   462                           	callstack 28
   463   0010C0                     
   464                           ;mcc_generated_files/system/src/interrupt.c: 145:     INT2_InterruptHandler = InterruptH
      +                          andler;
   465   0010C0  C007  F001         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
   466   0010C4  C008  F002         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
   467   0010C8  0012               	return		;funcret
   468   0010CA                     __end_of_INT2_SetInterruptHandler:
   469                           	callstack 0
   470                           
   471 ;; *************** function _INT1_SetInterruptHandler *****************
   472 ;; Defined at:
   473 ;;		line 118 in file "mcc_generated_files/system/src/interrupt.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   476 ;;		 -> INT1_DefaultInterruptHandler(1), 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;Total ram usage:        2 bytes
   493 ;; Hardware stack levels used: 1
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_INTERRUPT_Initialize
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text5
   502   0010CA                     __ptext5:
   503                           	callstack 0
   504   0010CA                     _INT1_SetInterruptHandler:
   505                           	callstack 28
   506   0010CA                     
   507                           ;mcc_generated_files/system/src/interrupt.c: 119:     INT1_InterruptHandler = InterruptH
      +                          andler;
   508   0010CA  C007  F003         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
   509   0010CE  C008  F004         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
   510   0010D2  0012               	return		;funcret
   511   0010D4                     __end_of_INT1_SetInterruptHandler:
   512                           	callstack 0
   513                           
   514 ;; *************** function _INT0_SetInterruptHandler *****************
   515 ;; Defined at:
   516 ;;		line 92 in file "mcc_generated_files/system/src/interrupt.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   519 ;;		 -> INT0_DefaultInterruptHandler(1), 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;Total ram usage:        2 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_INTERRUPT_Initialize
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text6
   545   0010D4                     __ptext6:
   546                           	callstack 0
   547   0010D4                     _INT0_SetInterruptHandler:
   548                           	callstack 28
   549   0010D4                     
   550                           ;mcc_generated_files/system/src/interrupt.c: 93:     INT0_InterruptHandler = InterruptHa
      +                          ndler;
   551   0010D4  C007  F005         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
   552   0010D8  C008  F006         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
   553   0010DC  0012               	return		;funcret
   554   0010DE                     __end_of_INT0_SetInterruptHandler:
   555                           	callstack 0
   556                           
   557 ;; *************** function _CLOCK_Initialize *****************
   558 ;; Defined at:
   559 ;;		line 40 in file "mcc_generated_files/system/src/clock.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, status,2
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_SYSTEM_Initialize
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text7
   587   0010DE                     __ptext7:
   588                           	callstack 0
   589   0010DE                     _CLOCK_Initialize:
   590                           	callstack 29
   591   0010DE                     
   592                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON = (0 << 0x0)
   593   0010DE  0E60               	movlw	96
   594   0010E0  6ED3               	movwf	211,c	;volatile
   595                           
   596                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0)
   597   0010E2  0E00               	movlw	0
   598   0010E4  6E9B               	movwf	155,c	;volatile
   599   0010E6  0012               	return		;funcret
   600   0010E8                     __end_of_CLOCK_Initialize:
   601                           	callstack 0
   602                           
   603                           	psect	smallconst
   604   001000                     __psmallconst:
   605                           	callstack 0
   606   001000  00                 	db	0
   607   001001  00                 	db	0	; dummy byte at the end
   608   000000                     
   609                           	psect	rparam
   610   000000                     
   611                           	psect	config
   612                           
   613                           ; Padding undefined space
   614   300000                     	org	3145728
   615   300000  FF                 	db	255
   616                           
   617                           ;Config register CONFIG1H @ 0x300001
   618                           ;	Oscillator Selection bits
   619                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   620                           ;	Fail-Safe Clock Monitor Enable bit
   621                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   622                           ;	Internal/External Oscillator Switchover bit
   623                           ;	IESO = OFF, Oscillator Switchover mode disabled
   624   300001                     	org	3145729
   625   300001  08                 	db	8
   626                           
   627                           ;Config register CONFIG2L @ 0x300002
   628                           ;	Power-up Timer Enable bit
   629                           ;	PWRTEN = OFF, PWRT disabled
   630                           ;	Brown-out Reset Enable bits
   631                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   632                           ;	Brown Out Reset Voltage bits
   633                           ;	BORV = 18, VBOR set to 1.8 V nominal
   634   300002                     	org	3145730
   635   300002  1F                 	db	31
   636                           
   637                           ;Config register CONFIG2H @ 0x300003
   638                           ;	Watchdog Timer Enable bit
   639                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   640                           ;	Watchdog Timer Postscale Select bits
   641                           ;	WDTPS = 32768, 1:32768
   642   300003                     	org	3145731
   643   300003  1E                 	db	30
   644                           
   645                           ; Padding undefined space
   646   300004                     	org	3145732
   647   300004  FF                 	db	255
   648                           
   649                           ;Config register CONFIG3H @ 0x300005
   650                           ;	CCP2 MUX bit
   651                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   652                           ;	PORTB A/D Enable bit
   653                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   654                           ;	Low-Power Timer1 Oscillator Enable bit
   655                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   656                           ;	HFINTOSC Fast Start-up
   657                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   658                           ;	MCLR Pin Enable bit
   659                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   660   300005                     	org	3145733
   661   300005  8B                 	db	139
   662                           
   663                           ;Config register CONFIG4L @ 0x300006
   664                           ;	Stack Full/Underflow Reset Enable bit
   665                           ;	STVREN = ON, Stack full/underflow will cause Reset
   666                           ;	Single-Supply ICSP Enable bit
   667                           ;	LVP = ON, Single-Supply ICSP enabled
   668                           ;	Extended Instruction Set Enable bit
   669                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   670                           ;	Background Debugger Enable bit
   671                           ;	DEBUG = 0x1, unprogrammed default
   672   300006                     	org	3145734
   673   300006  85                 	db	133
   674                           
   675                           ; Padding undefined space
   676   300007                     	org	3145735
   677   300007  FF                 	db	255
   678                           
   679                           ;Config register CONFIG5L @ 0x300008
   680                           ;	Code Protection Block 0
   681                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   682                           ;	Code Protection Block 1
   683                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   684                           ;	Code Protection Block 2
   685                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   686                           ;	Code Protection Block 3
   687                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   688   300008                     	org	3145736
   689   300008  0F                 	db	15
   690                           
   691                           ;Config register CONFIG5H @ 0x300009
   692                           ;	Boot Block Code Protection bit
   693                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   694                           ;	Data EEPROM Code Protection bit
   695                           ;	CPD = OFF, Data EEPROM not code-protected
   696   300009                     	org	3145737
   697   300009  C0                 	db	192
   698                           
   699                           ;Config register CONFIG6L @ 0x30000A
   700                           ;	Write Protection Block 0
   701                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   702                           ;	Write Protection Block 1
   703                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   704                           ;	Write Protection Block 2
   705                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   706                           ;	Write Protection Block 3
   707                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
   708   30000A                     	org	3145738
   709   30000A  0F                 	db	15
   710                           
   711                           ;Config register CONFIG6H @ 0x30000B
   712                           ;	Configuration Register Write Protection bit
   713                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   714                           ;	Boot Block Write Protection bit
   715                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   716                           ;	Data EEPROM Write Protection bit
   717                           ;	WRTD = OFF, Data EEPROM not write-protected
   718   30000B                     	org	3145739
   719   30000B  E0                 	db	224
   720                           
   721                           ;Config register CONFIG7L @ 0x30000C
   722                           ;	Table Read Protection Block 0
   723                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   724                           ;	Table Read Protection Block 1
   725                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   726                           ;	Table Read Protection Block 2
   727                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   728                           ;	Table Read Protection Block 3
   729                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   730   30000C                     	org	3145740
   731   30000C  0F                 	db	15
   732                           
   733                           ;Config register CONFIG7H @ 0x30000D
   734                           ;	Boot Block Table Read Protection bit
   735                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   736   30000D                     	org	3145741
   737   30000D  40                 	db	64
   738                           tosu	equ	0xFFF
   739                           tosh	equ	0xFFE
   740                           tosl	equ	0xFFD
   741                           stkptr	equ	0xFFC
   742                           pclatu	equ	0xFFB
   743                           pclath	equ	0xFFA
   744                           pcl	equ	0xFF9
   745                           tblptru	equ	0xFF8
   746                           tblptrh	equ	0xFF7
   747                           tblptrl	equ	0xFF6
   748                           tablat	equ	0xFF5
   749                           prodh	equ	0xFF4
   750                           prodl	equ	0xFF3
   751                           indf0	equ	0xFEF
   752                           postinc0	equ	0xFEE
   753                           postdec0	equ	0xFED
   754                           preinc0	equ	0xFEC
   755                           plusw0	equ	0xFEB
   756                           fsr0h	equ	0xFEA
   757                           fsr0l	equ	0xFE9
   758                           wreg	equ	0xFE8
   759                           indf1	equ	0xFE7
   760                           postinc1	equ	0xFE6
   761                           postdec1	equ	0xFE5
   762                           preinc1	equ	0xFE4
   763                           plusw1	equ	0xFE3
   764                           fsr1h	equ	0xFE2
   765                           fsr1l	equ	0xFE1
   766                           bsr	equ	0xFE0
   767                           indf2	equ	0xFDF
   768                           postinc2	equ	0xFDE
   769                           postdec2	equ	0xFDD
   770                           preinc2	equ	0xFDC
   771                           plusw2	equ	0xFDB
   772                           fsr2h	equ	0xFDA
   773                           fsr2l	equ	0xFD9
   774                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     294
                                              2 COMRAM     2     2      0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       A       1       10.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       A       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BANK13             100      0       0      30        0.0%
ABS                  0      0       A      31        0.0%
BITBANK13          100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhhlhh      1C      0       0      38        0.0%
BITBIGSFRhhlhl       2      0       0      39        0.0%
BITBIGSFRhhllh      34      0       0      40        0.0%
BITBIGSFRhhlll       4      0       0      41        0.0%
BITBIGSFRhl          4      0       0      42        0.0%
BITBIGSFRlh          9      0       0      43        0.0%
BITBIGSFRllh         1      0       0      44        0.0%
BITBIGSFRlll        1C      0       0      45        0.0%
BIGRAM             F5F      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Aug 11 18:47:02 2024

                                      l31 10A6                                        l92 10D2  
                                      l69 1076                                        l79 10DC  
                                      u80 1016                                        u81 1010  
                                      u86 1018                                        u97 1030  
                                     l105 10C8                                       l140 10E6  
                                     l133 10B4                                       l900 10A8  
                                     l830 109E                                       l822 1078  
                                     l902 10B0                                       l832 10A4  
                                     l824 108C                                       l904 1002  
                                     l826 108E                                       l906 1006  
                                     l828 1094                                       l908 1026  
                                     l846 10DE                                       l882 10D4  
                                     l890 104A                                       l884 10CA  
                                     l892 1056                                       l886 10C0  
                                     l894 1058                                       l896 1066  
                                     l888 1044                                       l898 1068  
              ??_INT0_SetInterruptHandler 0009                                       wreg 0FE8  
                                    _IOCB 0F7D                                      _LATA 0F89  
                                    _LATB 0F8A                                      _LATC 0F8B  
                                    _LATD 0F8C                                      _LATE 0F8D  
                                    _WPUB 0F7C                                      _main 1002  
               ?_INT2_SetInterruptHandler 0007                                      start 0000  
                            ___param_bank 0000                                     ?_main 0007  
                                   _TRISA 0F92                                     _TRISB 0F93  
                                   _TRISC 0F94                                     _TRISD 0F95  
                                   _TRISE 0F96                  _INT1_SetInterruptHandler 10CA  
                         __initialization 10B6                              __end_of_main 1044  
                                  ??_main 0009                             __activetblptr 0002  
                                  _ANSELH 0F7F                                    _OSCCON 0FD3  
                                  isa$std 0001                         ?_CLOCK_Initialize 0007  
            _INT2_DefaultInterruptHandler 0000                        ??_CLOCK_Initialize 0007  
                            __mediumconst 0000                                    tblptru 0FF8  
INT2_SetInterruptHandler@InterruptHandler 0007  INT1_SetInterruptHandler@InterruptHandler 0007  
INT0_SetInterruptHandler@InterruptHandler 0007                         _SYSTEM_Initialize 10A8  
                              __accesstop 0060                   __end_of__initialization 10B6  
                      ?_SYSTEM_Initialize 0007                             ___rparam_used 0001  
                          __pcstackCOMRAM 0007                       ??_SYSTEM_Initialize 0009  
        __end_of_INT2_SetInterruptHandler 10CA                 __end_of_SYSTEM_Initialize 10B6  
                   _INT0_InterruptHandler 0005                                __pnvCOMRAM 0001  
              ??_INT1_SetInterruptHandler 0009                                   _OSCTUNE 0F9B  
               ?_INT0_SetInterruptHandler 0007                                   __Hparam 0000  
                                 __Lparam 0000                              __psmallconst 1000  
                                 __pcinit 10B6                                   __ramtop 1000  
                                 __ptext0 1002                                   __ptext1 10A8  
                                 __ptext2 1078                                   __ptext3 1044  
                                 __ptext4 10C0                                   __ptext5 10CA  
                                 __ptext6 10D4                                   __ptext7 10DE  
                ??_PIN_MANAGER_Initialize 0007                      end_of_initialization 10B6  
                _INT2_SetInterruptHandler 10C0                             __Lmediumconst 0000  
                   _INT1_InterruptHandler 0003              __end_of_INTERRUPT_Initialize 1078  
            _INT0_DefaultInterruptHandler 0000                       start_initialization 10B6  
        __end_of_INT0_SetInterruptHandler 10DE                     _INT2_InterruptHandler 0001  
                  _PIN_MANAGER_Initialize 1078                               __smallconst 1000  
              ??_INT2_SetInterruptHandler 0009                      _INTERRUPT_Initialize 1044  
                        _CLOCK_Initialize 10DE                                  _LATCbits 0F8B  
               ?_INT1_SetInterruptHandler 0007                                  _RCONbits 0FD0  
                             _INTCON2bits 0FF1                               _INTCON3bits 0FF0  
                   ?_INTERRUPT_Initialize 0007                  _INT0_SetInterruptHandler 10D4  
                                __Hrparam 0000                                  __Lrparam 0000  
                                isa$xinst 0000              _INT1_DefaultInterruptHandler 0000  
                              _INTCONbits 0FF2                    ??_INTERRUPT_Initialize 0009  
                 ?_PIN_MANAGER_Initialize 0007                  __end_of_CLOCK_Initialize 10E8  
        __end_of_INT1_SetInterruptHandler 10D4            __end_of_PIN_MANAGER_Initialize 10A8  
